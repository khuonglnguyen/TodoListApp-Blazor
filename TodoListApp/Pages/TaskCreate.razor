@page "/task-create"

@using TodoList.Models
@using TodoList.Models.Enums
@using TodoListApp.Services

@inject ITaskApiClient TaskApiClient
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h3>Create Task</h3>
<EditForm Model="Task" OnValidSubmit="SubmitTask">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText class="form-control" @bind-Value="Task.Name"></InputText>
        <ValidationMessage For="()=>Task.Name"></ValidationMessage>
        <small id="nameHelp" class="form-text text-muted">Please enter task title here.</small>
    </div>
    <div class="form-group">
        <label for="Name">Priority</label>
        <InputSelect class="form-control" @bind-Value="Task.Priority">
            <option>Select a priority</option>
            @foreach (string item in Enum.GetNames(typeof(Priority)))
            {
                <option value="@item">@item</option>
            }
        </InputSelect>
        <ValidationMessage For="()=>Task.Priority"></ValidationMessage>
        <small id="nameHelp" class="form-text text-muted">Choose a priority which you want.</small>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private TaskCreateRequest Task = new TaskCreateRequest();

    private async Task SubmitTask(EditContext context)
    {
        var result = await TaskApiClient.CreateTask(Task);
        if (result)
        {
            toastService.ShowInfo("Successfully!");
            NavigationManager.NavigateTo("/task-list");
        }else
        {
            toastService.ShowError("Error!");
        }
    }
}